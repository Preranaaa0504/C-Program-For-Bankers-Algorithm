#include<stdio.h>
int main()
{
    int n=5,m=3;
    int alloc[5][3]= {{0,1,0},{2,0,0},{3,0,2},{2,1,1},{0,0,2}};
    int finish[5]= {0,0,0,0,0};
    int need[5][3];
    int max[5][3]= {{7,5,3},{3,2,2},{9,0,2},{2,2,2},{4,3,3}};
    int avail[3]= {3,3,2};
    int work[3]= {3,3,2};
    int count = 0;
    for(int i=0; i<3; i++) {
        work[i]=avail[i];
    }
    for(int i=0; i<5; i++) {
        for(int j=0; j<3; j++) {
            need[i][j] = max[i][j] - alloc[i][j];
        }
    }
    printf("\tAlloc\t\t\tMax\t\t\tNeed\t\t\tAvail");
    printf("\nR0\tR1\tR2\tR0\tR1\tR2\tR0\tR1\tR2\tR0\tR1\tR2");
    for(int i=0; i<5; i++) {
        if(i==0) {
            printf("\n%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\n",
                   alloc[i][0],alloc[i][1],alloc[i][2],max[i][0],max[i][1],max[i][2],need[i][0],need[i][1],need
                   [i][2],avail[0],avail[1],avail[2]);
        } else {
            printf("\n%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\n",
                   alloc[i][0],alloc[i][1],alloc[i][2],max[i][0],max[i][1],max[i][2],need[i][0],need[i][1],need
                   [i][2]);
        }
    }
    while (count < 5) {
        for(int i=0; i<5; i++) {
            int flag = 0;
            for(int j=0; j<3; j++) {
                if(need[i][j] > work[j]) {
                    flag = 1;
                    break;
                }
            }
            if(flag==0 && finish[i]==0) {
                for(int j=0; j<3; j++) {
                    work[j] = work[j]+alloc[i][j];
                    finish[i]=1;
                    printf("\tP%d ->",i);
                }
            }
        }
        count++;
    }
    int flag2 =0;
    for(int i=0; i<n; i++) {
        if(finish[i]==0) {
            flag2=1;
        }
    }
    if(flag2==0) {
        printf("\nSystem is in a safe state.");
    } else {
        printf("\nSystem is not in a safe state.");
    }
    return 0;
}
